{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\"; //creates a redux-saga middleware\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n} //mounts the middleware on the Store\n\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares)); //runs the saga\n\nsagaMiddleware.run(rootSaga); //This is the persisted version of our Store.\n\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Projects/React/ecommerce-app/client/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","createSagaMiddleware","persistStore","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CAEA;;AACA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACD,C,CAED;;;AACA,MAAMW,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CAEA;;AACAD,cAAc,CAACO,GAAf,CAAmBR,QAAnB,E,CAEA;;AACA,MAAMS,SAAS,GAAGX,YAAY,CAACS,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBE,SAAhB","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport rootReducer from \"./root-reducer\";\r\nimport rootSaga from \"./root-saga\";\r\n\r\n//creates a redux-saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middlewares.push(logger);\r\n}\r\n\r\n//mounts the middleware on the Store\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\n//runs the saga\r\nsagaMiddleware.run(rootSaga);\r\n\r\n//This is the persisted version of our Store.\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n"]},"metadata":{},"sourceType":"module"}