{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectShop = state => state.shop;\n\nexport const selectShopData = createSelector([selectShop], shop => shop.shopData);\nexport const selectCollectionsForPreview = createSelector([selectShopData], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectShopCollection = collectionUrlParams => {\n  return createSelector([selectShopData], collections => collections ? collections[collectionUrlParams] : null);\n};\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionLoaded = createSelector([selectShop], shop => !!shop.shopData //returns a boolean\n);","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Projects/React/ecommerce-app/client/src/redux/shop/shop-selector.js"],"names":["createSelector","selectShop","state","shop","selectShopData","shopData","selectCollectionsForPreview","collections","Object","keys","map","key","selectShopCollection","collectionUrlParams","selectIsCollectionFetching","isFetching","selectIsCollectionLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,cAAc,GAAGJ,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAEzCE,IAAD,IAAUA,IAAI,CAACE,QAF2B,CAArC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACI,cAAD,CADuD,EAEtDG,WAAD,IACEA,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,GAAzB,CAA8BC,GAAD,IAASJ,WAAW,CAACI,GAAD,CAAjD,CAAH,GAA6D,EAHnB,CAAlD;AAMP,OAAO,MAAMC,oBAAoB,GAAIC,mBAAD,IAAyB;AAC3D,SAAOb,cAAc,CAAC,CAACI,cAAD,CAAD,EAAoBG,WAAD,IACtCA,WAAW,GAAGA,WAAW,CAACM,mBAAD,CAAd,GAAsC,IAD9B,CAArB;AAGD,CAJM;AAMP,OAAO,MAAMC,0BAA0B,GAAGd,cAAc,CACtD,CAACC,UAAD,CADsD,EAErDE,IAAD,IAAUA,IAAI,CAACY,UAFuC,CAAjD;AAKP,OAAO,MAAMC,wBAAwB,GAAGhB,cAAc,CACpD,CAACC,UAAD,CADoD,EAEnDE,IAAD,IAAU,CAAC,CAACA,IAAI,CAACE,QAFmC,CAE1B;AAF0B,CAA/C","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst selectShop = (state) => state.shop;\r\n\r\nexport const selectShopData = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.shopData\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectShopData],\r\n  (collections) =>\r\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\r\n);\r\n\r\nexport const selectShopCollection = (collectionUrlParams) => {\r\n  return createSelector([selectShopData], (collections) =>\r\n    collections ? collections[collectionUrlParams] : null\r\n  );\r\n};\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionLoaded = createSelector(\r\n  [selectShop],\r\n  (shop) => !!shop.shopData //returns a boolean\r\n);\r\n"]},"metadata":{},"sourceType":"module"}