{"ast":null,"code":"import{createSelector}from\"reselect\";//input Selector(Doesnt use Create Selector)\nvar selectCart=function selectCart(state){return state.cart;};//output Selector(Use Create Selector and input Selector)\nexport var selectCartItems=createSelector([selectCart],function(cart){return cart.cartItems;});export var selectIsCartHidden=createSelector([selectCart],function(cart){return cart.hidden;});export var selectCartItemsCount=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(total,item){return item.quantity+total;},0);});export var selectCartItemsTotal=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(total,item){return item.quantity*item.price+total;},0);});// export const deleteCartItem = createSelector([selectCartItems], (cartItems) => cartItems.)","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Projects/React/ecommerce-app/client/src/redux/cart/cart-selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectIsCartHidden","hidden","selectCartItemsCount","reduce","total","item","quantity","selectCartItemsTotal","price"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CAEA;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAAnB,CAEA;AACA,MAAO,IAAMC,CAAAA,eAAe,CAAGJ,cAAc,CAC1C,CAACC,UAAD,CAD0C,CAE1C,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAACE,SAAf,EAF0C,CAAtC,CAKP,MAAO,IAAMC,CAAAA,kBAAkB,CAAGN,cAAc,CAC7C,CAACC,UAAD,CAD6C,CAE7C,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAACI,MAAf,EAF6C,CAAzC,CAKP,MAAO,IAAMC,CAAAA,oBAAoB,CAAGR,cAAc,CAC/C,CAACI,eAAD,CAD+C,CAE/C,SAACC,SAAD,QAAeA,CAAAA,SAAS,CAACI,MAAV,CAAiB,SAACC,KAAD,CAAQC,IAAR,QAAiBA,CAAAA,IAAI,CAACC,QAAL,CAAgBF,KAAjC,EAAjB,CAAyD,CAAzD,CAAf,EAF+C,CAA3C,CAKP,MAAO,IAAMG,CAAAA,oBAAoB,CAAGb,cAAc,CAC/C,CAACI,eAAD,CAD+C,CAE/C,SAACC,SAAD,QACGA,CAAAA,SAAS,CAACI,MAAV,CAAiB,SAACC,KAAD,CAAQC,IAAR,QAAiBA,CAAAA,IAAI,CAACC,QAAL,CAAgBD,IAAI,CAACG,KAArB,CAA6BJ,KAA9C,EAAjB,CAAsE,CAAtE,CADH,EAF+C,CAA3C,CAMP","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\n//input Selector(Doesnt use Create Selector)\r\nconst selectCart = (state) => state.cart;\r\n\r\n//output Selector(Use Create Selector and input Selector)\r\nexport const selectCartItems = createSelector(\r\n   [selectCart],\r\n   (cart) => cart.cartItems\r\n);\r\n\r\nexport const selectIsCartHidden = createSelector(\r\n   [selectCart],\r\n   (cart) => cart.hidden\r\n);\r\n\r\nexport const selectCartItemsCount = createSelector(\r\n   [selectCartItems],\r\n   (cartItems) => cartItems.reduce((total, item) => item.quantity + total, 0)\r\n);\r\n\r\nexport const selectCartItemsTotal = createSelector(\r\n   [selectCartItems],\r\n   (cartItems) =>\r\n      cartItems.reduce((total, item) => item.quantity * item.price + total, 0)\r\n);\r\n\r\n// export const deleteCartItem = createSelector([selectCartItems], (cartItems) => cartItems.)\r\n"]},"metadata":{},"sourceType":"module"}