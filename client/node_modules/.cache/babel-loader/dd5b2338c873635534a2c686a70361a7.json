{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Acer\\\\Desktop\\\\Projects\\\\React\\\\ecommerce-app\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(AsyncFetchCollections),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(shopSagas);import{takeLatest,call,put,all}from\"redux-saga/effects\";import{firestoreDatabase,collection,getDocs,convertCollectionsSnapshotToMap}from\"../../firebase/firebase.utils\";import ShopActionTypes from\"./shop-types\";import{fetchCollectionsSuccess,fetchCollectionsFailure}from\"./shop-actions\";function AsyncFetchCollections(){var colRef,collectionsSnapshot,collectionsMap;return _regeneratorRuntime.wrap(function AsyncFetchCollections$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return collection(firestoreDatabase,\"collections\");case 3:colRef=_context.sent;_context.next=6;return getDocs(colRef);case 6:collectionsSnapshot=_context.sent;_context.next=9;return call(convertCollectionsSnapshotToMap,collectionsSnapshot);case 9:collectionsMap=_context.sent;_context.next=12;return put(fetchCollectionsSuccess(collectionsMap));case 12:_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);_context.next=18;return put(fetchCollectionsFailure(_context.t0.message));case 18:case\"end\":return _context.stop();}}},_marked,null,[[0,14]]);}// Starts AsyncFetchCollections on each dispatched `FETCH_COLLECTIONS_START` action.\nfunction fetchCollectionsStart(){return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,AsyncFetchCollections);case 2:case\"end\":return _context2.stop();}}},_marked2);}function shopSagas(){return _regeneratorRuntime.wrap(function shopSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(fetchCollectionsStart)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}export default shopSagas;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Projects/React/ecommerce-app/client/src/redux/shop/shop-saga.js"],"names":["AsyncFetchCollections","fetchCollectionsStart","shopSagas","takeLatest","call","put","all","firestoreDatabase","collection","getDocs","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","colRef","collectionsSnapshot","collectionsMap","message","FETCH_COLLECTIONS_START"],"mappings":"0MAeUA,qB,iDAgBAC,qB,iDAOAC,S,EAtCV,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,GAA3B,CAAgCC,GAAhC,KAA2C,oBAA3C,CAEA,OACEC,iBADF,CAEEC,UAFF,CAGEC,OAHF,CAIEC,+BAJF,KAKO,+BALP,CAOA,MAAOC,CAAAA,eAAP,KAA4B,cAA5B,CACA,OACEC,uBADF,CAEEC,uBAFF,KAGO,gBAHP,CAKA,QAAUb,CAAAA,qBAAV,+MAEmB,MAAMQ,CAAAA,UAAU,CAACD,iBAAD,CAAoB,aAApB,CAAhB,CAFnB,OAEUO,MAFV,+BAGgC,MAAML,CAAAA,OAAO,CAACK,MAAD,CAAb,CAHhC,OAGUC,mBAHV,+BAI2B,MAAMX,CAAAA,IAAI,CAC/BM,+BAD+B,CAE/BK,mBAF+B,CAAV,CAJ3B,OAIUC,cAJV,gCAQI,MAAMX,CAAAA,GAAG,CAACO,uBAAuB,CAACI,cAAD,CAAxB,CAAT,CARJ,0GAUI,MAAMX,CAAAA,GAAG,CAACQ,uBAAuB,CAAC,YAAMI,OAAP,CAAxB,CAAT,CAVJ,qEAcA;AAEA,QAAUhB,CAAAA,qBAAV,qJACE,MAAME,CAAAA,UAAU,CACdQ,eAAe,CAACO,uBADF,CAEdlB,qBAFc,CAAhB,CADF,wDAOA,QAAUE,CAAAA,SAAV,yIACE,MAAMI,CAAAA,GAAG,CAAC,CAACF,IAAI,CAACH,qBAAD,CAAL,CAAD,CAAT,CADF,wDAIA,cAAeC,CAAAA,SAAf","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  firestoreDatabase,\r\n  collection,\r\n  getDocs,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport ShopActionTypes from \"./shop-types\";\r\nimport {\r\n  fetchCollectionsSuccess,\r\n  fetchCollectionsFailure,\r\n} from \"./shop-actions\";\r\n\r\nfunction* AsyncFetchCollections() {\r\n  try {\r\n    const colRef = yield collection(firestoreDatabase, \"collections\");\r\n    const collectionsSnapshot = yield getDocs(colRef);\r\n    const collectionsMap = yield call(\r\n      convertCollectionsSnapshotToMap,\r\n      collectionsSnapshot\r\n    );\r\n    yield put(fetchCollectionsSuccess(collectionsMap));\r\n  } catch (error) {\r\n    yield put(fetchCollectionsFailure(error.message));\r\n  }\r\n}\r\n\r\n// Starts AsyncFetchCollections on each dispatched `FETCH_COLLECTIONS_START` action.\r\n\r\nfunction* fetchCollectionsStart() {\r\n  yield takeLatest(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    AsyncFetchCollections\r\n  );\r\n}\r\n\r\nfunction* shopSagas() {\r\n  yield all([call(fetchCollectionsStart)]);\r\n}\r\n\r\nexport default shopSagas;\r\n"]},"metadata":{},"sourceType":"module"}