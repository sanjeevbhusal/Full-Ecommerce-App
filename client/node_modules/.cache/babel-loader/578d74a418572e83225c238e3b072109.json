{"ast":null,"code":"import{createStore,applyMiddleware}from\"redux\";import logger from\"redux-logger\";import createSagaMiddleware from\"redux-saga\";import{persistStore}from\"redux-persist\";import rootReducer from\"./root-reducer\";import rootSaga from\"./root-saga\";//creates a redux-saga middleware\nvar sagaMiddleware=createSagaMiddleware();var middlewares=[sagaMiddleware];if(process.env.NODE_ENV===\"development\"){middlewares.push(logger);}//mounts the middleware on the Store\nvar store=createStore(rootReducer,applyMiddleware.apply(void 0,middlewares));//runs the saga\nsagaMiddleware.run(rootSaga);//This is the persisted version of our Store.\nvar persistor=persistStore(store);export{store,persistor};","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Projects/React/ecommerce-app/client/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","createSagaMiddleware","persistStore","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,OAASC,YAAT,KAA6B,eAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CAEA;AACA,GAAMC,CAAAA,cAAc,CAAGJ,oBAAoB,EAA3C,CAEA,GAAMK,CAAAA,WAAW,CAAG,CAACD,cAAD,CAApB,CAEA,GAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAA7B,CAA4C,CAC1CH,WAAW,CAACI,IAAZ,CAAiBV,MAAjB,EACD,CAED;AACA,GAAMW,CAAAA,KAAK,CAAGb,WAAW,CAACK,WAAD,CAAcJ,eAAe,MAAf,QAAmBO,WAAnB,CAAd,CAAzB,CAEA;AACAD,cAAc,CAACO,GAAf,CAAmBR,QAAnB,EAEA;AACA,GAAMS,CAAAA,SAAS,CAAGX,YAAY,CAACS,KAAD,CAA9B,CAEA,OAASA,KAAT,CAAgBE,SAAhB","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport rootReducer from \"./root-reducer\";\r\nimport rootSaga from \"./root-saga\";\r\n\r\n//creates a redux-saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middlewares.push(logger);\r\n}\r\n\r\n//mounts the middleware on the Store\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\n//runs the saga\r\nsagaMiddleware.run(rootSaga);\r\n\r\n//This is the persisted version of our Store.\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n"]},"metadata":{},"sourceType":"module"}