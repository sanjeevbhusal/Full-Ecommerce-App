{"ast":null,"code":"import _objectSpread from\"C:/Users/Acer/Desktop/Projects/React/ecommerce-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/Acer/Desktop/Projects/React/ecommerce-app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Acer\\\\Desktop\\\\Projects\\\\React\\\\ecommerce-app\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{initializeApp}from\"firebase/app\";import{getFirestore,collection,doc,getDoc,setDoc,onSnapshot,writeBatch,getDocs}from\"firebase/firestore\";import{getAuth,GoogleAuthProvider,signInWithPopup,onAuthStateChanged,createUserWithEmailAndPassword,signInWithEmailAndPassword}from\"firebase/auth\";var firebaseConfig={apiKey:\"AIzaSyAJKILP5CeQIYJ401_o-GT0snuWDy8kkKA\",authDomain:\"ecommerce-app-db-afcd3.firebaseapp.com\",projectId:\"ecommerce-app-db-afcd3\",storageBucket:\"ecommerce-app-db-afcd3.appspot.com\",messagingSenderId:\"385228327556\",appId:\"1:385228327556:web:80c1c9673644e6b6ebd0d1\"};//init Firebase\nvar app=initializeApp(firebaseConfig);//init services\nvar authInstance=getAuth(app);var firestoreDatabase=getFirestore();var batch=writeBatch(firestoreDatabase);//Google Sign-in\nvar googleProvider=new GoogleAuthProvider();//adding in firestore database based upon the user's authentication info\nvar createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapshot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:userRef=doc(firestoreDatabase,\"users/\".concat(userAuth.uid));_context.next=3;return getDoc(userRef);case 3:snapshot=_context.sent;if(snapshot.exists()){_context.next=15;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=7;_context.next=10;return setDoc(userRef,_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 10:_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](7);console.log(\"Error\",_context.t0);case 15:return _context.abrupt(\"return\",userRef);case 16:case\"end\":return _context.stop();}}},_callee,null,[[7,12]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();var addCollectionAndDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey,documentsToAdd){var colRef;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:colRef=collection(firestoreDatabase,collectionKey);documentsToAdd.forEach(function(document){var newDocRef=doc(colRef);batch.set(newDocRef,document);});_context2.next=4;return batch.commit();case 4:return _context2.abrupt(\"return\",_context2.sent);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionAndDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();var convertCollectionsSnapshotToMap=function convertCollectionsSnapshotToMap(collectionSnapshot){var transformedCollection=collectionSnapshot.docs.map(function(collection){var _collection$data=collection.data(),items=_collection$data.items,title=_collection$data.title;return{id:collection.id,route:collection.title,items:items,title:title};});return transformedCollection.reduce(function(accumulator,collection){accumulator[collection.title.toLowerCase()]=collection;return accumulator;},{});};function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=onAuthStateChanged(authInstance,function(userAuth){unsubscribe();resolve(userAuth);},reject);});}export{onAuthStateChanged,authInstance,firestoreDatabase,collection,createUserProfileDocument,createUserWithEmailAndPassword,signInWithEmailAndPassword,doc,getDoc,onSnapshot,addCollectionAndDocuments,getDocs,convertCollectionsSnapshotToMap,googleProvider,signInWithPopup,getCurrentUser};","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Projects/React/ecommerce-app/client/src/firebase/firebase.utils.js"],"names":["initializeApp","getFirestore","collection","doc","getDoc","setDoc","onSnapshot","writeBatch","getDocs","getAuth","GoogleAuthProvider","signInWithPopup","onAuthStateChanged","createUserWithEmailAndPassword","signInWithEmailAndPassword","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","authInstance","firestoreDatabase","batch","googleProvider","createUserProfileDocument","userAuth","additionalData","userRef","uid","snapshot","exists","displayName","email","createdAt","Date","console","log","addCollectionAndDocuments","collectionKey","documentsToAdd","colRef","forEach","document","newDocRef","set","commit","convertCollectionsSnapshotToMap","collectionSnapshot","transformedCollection","docs","map","data","items","title","id","route","reduce","accumulator","toLowerCase","getCurrentUser","Promise","resolve","reject","unsubscribe"],"mappings":"2bAAA,OAASA,aAAT,KAA8B,cAA9B,CACA,OACEC,YADF,CAEEC,UAFF,CAGEC,GAHF,CAIEC,MAJF,CAKEC,MALF,CAMEC,UANF,CAOEC,UAPF,CAQEC,OARF,KASO,oBATP,CAUA,OACEC,OADF,CAEEC,kBAFF,CAGEC,eAHF,CAIEC,kBAJF,CAKEC,8BALF,CAMEC,0BANF,KAOO,eAPP,CASA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,MAAM,CAAE,yCADa,CAErBC,UAAU,CAAE,wCAFS,CAGrBC,SAAS,CAAE,wBAHU,CAIrBC,aAAa,CAAE,oCAJM,CAKrBC,iBAAiB,CAAE,cALE,CAMrBC,KAAK,CAAE,2CANc,CAAvB,CASA;AACA,GAAMC,CAAAA,GAAG,CAAGtB,aAAa,CAACe,cAAD,CAAzB,CAEA;AACA,GAAMQ,CAAAA,YAAY,CAAGd,OAAO,CAACa,GAAD,CAA5B,CACA,GAAME,CAAAA,iBAAiB,CAAGvB,YAAY,EAAtC,CACA,GAAMwB,CAAAA,KAAK,CAAGlB,UAAU,CAACiB,iBAAD,CAAxB,CAEA;AACA,GAAME,CAAAA,cAAc,CAAG,GAAIhB,CAAAA,kBAAJ,EAAvB,CAEA;AACA,GAAMiB,CAAAA,yBAAyB,0FAAG,iBAAOC,QAAP,CAAiBC,cAAjB,mKAC1BC,OAD0B,CAChB3B,GAAG,CAACqB,iBAAD,iBAA6BI,QAAQ,CAACG,GAAtC,EADa,uBAEX3B,CAAAA,MAAM,CAAC0B,OAAD,CAFK,QAE5BE,QAF4B,kBAI3BA,QAAQ,CAACC,MAAT,EAJ2B,0BAKtBC,WALsB,CAKCN,QALD,CAKtBM,WALsB,CAKTC,KALS,CAKCP,QALD,CAKTO,KALS,CAMxBC,SANwB,CAMZ,GAAIC,CAAAA,IAAJ,EANY,wCAStBhC,CAAAA,MAAM,CAACyB,OAAD,gBACVI,WAAW,CAAXA,WADU,CAEVC,KAAK,CAALA,KAFU,CAGVC,SAAS,CAATA,SAHU,EAIPP,cAJO,EATgB,0FAgB5BS,OAAO,CAACC,GAAR,CAAY,OAAZ,cAhB4B,wCAoBzBT,OApByB,uEAAH,kBAAzBH,CAAAA,yBAAyB,gDAA/B,CAuBA,GAAMa,CAAAA,yBAAyB,2FAAG,kBAAOC,aAAP,CAAsBC,cAAtB,iIAC1BC,MAD0B,CACjBzC,UAAU,CAACsB,iBAAD,CAAoBiB,aAApB,CADO,CAGhCC,cAAc,CAACE,OAAf,CAAuB,SAACC,QAAD,CAAc,CACnC,GAAMC,CAAAA,SAAS,CAAG3C,GAAG,CAACwC,MAAD,CAArB,CACAlB,KAAK,CAACsB,GAAN,CAAUD,SAAV,CAAqBD,QAArB,EACD,CAHD,EAHgC,uBAQnBpB,CAAAA,KAAK,CAACuB,MAAN,EARmB,iHAAH,kBAAzBR,CAAAA,yBAAyB,kDAA/B,CAWA,GAAMS,CAAAA,+BAA+B,CAAG,QAAlCA,CAAAA,+BAAkC,CAACC,kBAAD,CAAwB,CAC9D,GAAMC,CAAAA,qBAAqB,CAAGD,kBAAkB,CAACE,IAAnB,CAAwBC,GAAxB,CAA4B,SAACnD,UAAD,CAAgB,CACxE,qBAAyBA,UAAU,CAACoD,IAAX,EAAzB,CAAQC,KAAR,kBAAQA,KAAR,CAAeC,KAAf,kBAAeA,KAAf,CAEA,MAAO,CACLC,EAAE,CAAEvD,UAAU,CAACuD,EADV,CAELC,KAAK,CAAExD,UAAU,CAACsD,KAFb,CAGLD,KAAK,CAALA,KAHK,CAILC,KAAK,CAALA,KAJK,CAAP,CAMD,CAT6B,CAA9B,CAWA,MAAOL,CAAAA,qBAAqB,CAACQ,MAAtB,CAA6B,SAACC,WAAD,CAAc1D,UAAd,CAA6B,CAC/D0D,WAAW,CAAC1D,UAAU,CAACsD,KAAX,CAAiBK,WAAjB,EAAD,CAAX,CAA8C3D,UAA9C,CACA,MAAO0D,CAAAA,WAAP,CACD,CAHM,CAGJ,EAHI,CAAP,CAID,CAhBD,CAkBA,QAASE,CAAAA,cAAT,EAA0B,CACxB,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtC,GAAMC,CAAAA,WAAW,CAAGtD,kBAAkB,CACpCW,YADoC,CAEpC,SAACK,QAAD,CAAc,CACZsC,WAAW,GACXF,OAAO,CAACpC,QAAD,CAAP,CACD,CALmC,CAMpCqC,MANoC,CAAtC,CAQD,CATM,CAAP,CAUD,CAED,OACErD,kBADF,CAEEW,YAFF,CAGEC,iBAHF,CAIEtB,UAJF,CAKEyB,yBALF,CAMEd,8BANF,CAOEC,0BAPF,CAQEX,GARF,CASEC,MATF,CAUEE,UAVF,CAWEkC,yBAXF,CAYEhC,OAZF,CAaEyC,+BAbF,CAcEvB,cAdF,CAeEf,eAfF,CAgBEmD,cAhBF","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  onSnapshot,\r\n  writeBatch,\r\n  getDocs,\r\n} from \"firebase/firestore\";\r\nimport {\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  onAuthStateChanged,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAJKILP5CeQIYJ401_o-GT0snuWDy8kkKA\",\r\n  authDomain: \"ecommerce-app-db-afcd3.firebaseapp.com\",\r\n  projectId: \"ecommerce-app-db-afcd3\",\r\n  storageBucket: \"ecommerce-app-db-afcd3.appspot.com\",\r\n  messagingSenderId: \"385228327556\",\r\n  appId: \"1:385228327556:web:80c1c9673644e6b6ebd0d1\",\r\n};\r\n\r\n//init Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n//init services\r\nconst authInstance = getAuth(app);\r\nconst firestoreDatabase = getFirestore();\r\nconst batch = writeBatch(firestoreDatabase);\r\n\r\n//Google Sign-in\r\nconst googleProvider = new GoogleAuthProvider();\r\n\r\n//adding in firestore database based upon the user's authentication info\r\nconst createUserProfileDocument = async (userAuth, additionalData) => {\r\n  const userRef = doc(firestoreDatabase, `users/${userAuth.uid}`);\r\n  let snapshot = await getDoc(userRef);\r\n\r\n  if (!snapshot.exists()) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await setDoc(userRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error\", error);\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n};\r\n\r\nconst addCollectionAndDocuments = async (collectionKey, documentsToAdd) => {\r\n  const colRef = collection(firestoreDatabase, collectionKey);\r\n\r\n  documentsToAdd.forEach((document) => {\r\n    const newDocRef = doc(colRef);\r\n    batch.set(newDocRef, document);\r\n  });\r\n\r\n  return await batch.commit();\r\n};\r\n\r\nconst convertCollectionsSnapshotToMap = (collectionSnapshot) => {\r\n  const transformedCollection = collectionSnapshot.docs.map((collection) => {\r\n    const { items, title } = collection.data();\r\n\r\n    return {\r\n      id: collection.id,\r\n      route: collection.title,\r\n      items,\r\n      title,\r\n    };\r\n  });\r\n\r\n  return transformedCollection.reduce((accumulator, collection) => {\r\n    accumulator[collection.title.toLowerCase()] = collection;\r\n    return accumulator;\r\n  }, {});\r\n};\r\n\r\nfunction getCurrentUser() {\r\n  return new Promise((resolve, reject) => {\r\n    const unsubscribe = onAuthStateChanged(\r\n      authInstance,\r\n      (userAuth) => {\r\n        unsubscribe();\r\n        resolve(userAuth);\r\n      },\r\n      reject\r\n    );\r\n  });\r\n}\r\n\r\nexport {\r\n  onAuthStateChanged,\r\n  authInstance,\r\n  firestoreDatabase,\r\n  collection,\r\n  createUserProfileDocument,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  doc,\r\n  getDoc,\r\n  onSnapshot,\r\n  addCollectionAndDocuments,\r\n  getDocs,\r\n  convertCollectionsSnapshotToMap,\r\n  googleProvider,\r\n  signInWithPopup,\r\n  getCurrentUser,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}