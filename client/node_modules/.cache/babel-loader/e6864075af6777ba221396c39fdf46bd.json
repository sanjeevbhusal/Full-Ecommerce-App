{"ast":null,"code":"import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport UserTypes from \"./user-types\";\nimport { signinSuccess, signinFailure, signoutSuccess, signoutFailure, signupSuccess, signupFailure } from \"./user-actions\";\nimport { signInWithPopup, googleProvider, authInstance, getDoc, createUserProfileDocument, createUserWithEmailAndPassword, signInWithEmailAndPassword, getCurrentUser } from \"../../firebase/firebase.utils\"; ///////////////////////////User Authentication////////////////////////////////\n\nfunction* authenticateUser(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signinSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n} ///////////////////////////SignUp Code////////////////////////////////\n\n\nfunction* signUpSuccess(_ref) {\n  let {\n    payload: {\n      userAuth,\n      additionalData\n    }\n  } = _ref;\n  yield authenticateUser(userAuth, additionalData);\n}\n\nfunction* signUp(_ref2) {\n  let {\n    payload: {\n      email,\n      password,\n      displayName\n    }\n  } = _ref2;\n\n  try {\n    const {\n      user\n    } = yield createUserWithEmailAndPassword(authInstance, email, password);\n    yield put(signupSuccess({\n      userAuth: user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signupFailure(error));\n  }\n} ///////////////////////////SignIn and SignOut Code//////////////////////////////\n\n\nfunction* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(authInstance, googleProvider);\n    yield authenticateUser(user);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\n\nfunction* signInWithEmail(_ref3) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref3;\n\n  try {\n    const {\n      user\n    } = yield signInWithEmailAndPassword(authInstance, email, password);\n    yield authenticateUser(user);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield authenticateUser(userAuth);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\n\nfunction* signOut() {\n  try {\n    yield authInstance.signOut();\n    yield put(signoutSuccess());\n  } catch (error) {\n    yield put(signoutFailure(error));\n  }\n} ///////////////////////////Sagas/////////////////////////////////////////\n\n\nfunction* onGoogleSignIn() {\n  yield takeLatest(UserTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\n\nfunction* onEmailSignIn() {\n  yield takeLatest(UserTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\n\nfunction* onCheckUserSession() {\n  yield takeLatest(UserTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nfunction* onSignOut() {\n  yield takeLatest(UserTypes.SIGNOUT_START, signOut);\n}\n\nfunction* onSignUp() {\n  yield takeLatest(UserTypes.SIGNUP_START, signUp);\n}\n\nfunction* onSignUpSuccess() {\n  yield takeLatest(UserTypes.SIGNUP_SUCCESS, signUpSuccess);\n}\n\nfunction* userSagas() {\n  yield all([call(onGoogleSignIn), call(onEmailSignIn), call(onCheckUserSession), call(onSignOut), call(onSignUp), call(onSignUpSuccess)]);\n}\n\nexport default userSagas;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Projects/React/ecommerce-app/src/redux/user/user-sagas.js"],"names":["takeLatest","all","call","put","UserTypes","signinSuccess","signinFailure","signoutSuccess","signoutFailure","signupSuccess","signupFailure","signInWithPopup","googleProvider","authInstance","getDoc","createUserProfileDocument","createUserWithEmailAndPassword","signInWithEmailAndPassword","getCurrentUser","authenticateUser","userAuth","additionalData","userRef","userSnapshot","id","data","error","signUpSuccess","payload","signUp","email","password","displayName","user","signInWithGoogle","signInWithEmail","isUserAuthenticated","signOut","onGoogleSignIn","GOOGLE_SIGNIN_START","onEmailSignIn","EMAIL_SIGNIN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOut","SIGNOUT_START","onSignUp","SIGNUP_START","onSignUpSuccess","SIGNUP_SUCCESS","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,aALF,EAMEC,aANF,QAOO,gBAPP;AASA,SACEC,eADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,MAJF,EAKEC,yBALF,EAMEC,8BANF,EAOEC,0BAPF,EAQEC,cARF,QASO,+BATP,C,CAWA;;AAEA,UAAUC,gBAAV,CAA2BC,QAA3B,EAAqCC,cAArC,EAAqD;AACnD,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMpB,IAAI,CACxBa,yBADwB,EAExBK,QAFwB,EAGxBC,cAHwB,CAA1B;AAKA,UAAME,YAAY,GAAG,MAAMT,MAAM,CAACQ,OAAD,CAAjC;AACA,UAAMnB,GAAG,CACPE,aAAa,CAAC;AACZmB,MAAAA,EAAE,EAAED,YAAY,CAACC,EADL;AAEZ,SAAGD,YAAY,CAACE,IAAb;AAFS,KAAD,CADN,CAAT;AAMD,GAbD,CAaE,OAAOC,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACG,aAAa,CAACoB,KAAD,CAAd,CAAT;AACD;AACF,C,CAED;;;AAEA,UAAUC,aAAV,OAAmE;AAAA,MAA3C;AAAEC,IAAAA,OAAO,EAAE;AAAER,MAAAA,QAAF;AAAYC,MAAAA;AAAZ;AAAX,GAA2C;AACjE,QAAMF,gBAAgB,CAACC,QAAD,EAAWC,cAAX,CAAtB;AACD;;AAED,UAAUQ,MAAV,QAAgE;AAAA,MAA/C;AAAED,IAAAA,OAAO,EAAE;AAAEE,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB;AAAX,GAA+C;;AAC9D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMjB,8BAA8B,CACnDH,YADmD,EAEnDiB,KAFmD,EAGnDC,QAHmD,CAArD;AAKA,UAAM5B,GAAG,CACPM,aAAa,CAAC;AAAEW,MAAAA,QAAQ,EAAEa,IAAZ;AAAkBZ,MAAAA,cAAc,EAAE;AAAEW,QAAAA;AAAF;AAAlC,KAAD,CADN,CAAT;AAGD,GATD,CASE,OAAON,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACO,aAAa,CAACgB,KAAD,CAAd,CAAT;AACD;AACF,C,CAED;;;AAEA,UAAUQ,gBAAV,GAA6B;AAC3B,MAAI;AACF,UAAM;AAAED,MAAAA;AAAF,QAAW,MAAMtB,eAAe,CAACE,YAAD,EAAeD,cAAf,CAAtC;AACA,UAAMO,gBAAgB,CAACc,IAAD,CAAtB;AACD,GAHD,CAGE,OAAOP,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACG,aAAa,CAACoB,KAAD,CAAd,CAAT;AACD;AACF;;AAED,UAAUS,eAAV,QAA4D;AAAA,MAAlC;AAAEP,IAAAA,OAAO,EAAE;AAAEE,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAX,GAAkC;;AAC1D,MAAI;AACF,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMhB,0BAA0B,CAC/CJ,YAD+C,EAE/CiB,KAF+C,EAG/CC,QAH+C,CAAjD;AAKA,UAAMZ,gBAAgB,CAACc,IAAD,CAAtB;AACD,GAPD,CAOE,OAAOP,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACG,aAAa,CAACoB,KAAD,CAAd,CAAT;AACD;AACF;;AAED,UAAUU,mBAAV,GAAgC;AAC9B,MAAI;AACF,UAAMhB,QAAQ,GAAG,MAAMF,cAAc,EAArC;AACA,QAAI,CAACE,QAAL,EAAe;AACf,UAAMD,gBAAgB,CAACC,QAAD,CAAtB;AACD,GAJD,CAIE,OAAOM,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACG,aAAa,CAACoB,KAAD,CAAd,CAAT;AACD;AACF;;AAED,UAAUW,OAAV,GAAoB;AAClB,MAAI;AACF,UAAMxB,YAAY,CAACwB,OAAb,EAAN;AACA,UAAMlC,GAAG,CAACI,cAAc,EAAf,CAAT;AACD,GAHD,CAGE,OAAOmB,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACK,cAAc,CAACkB,KAAD,CAAf,CAAT;AACD;AACF,C,CAED;;;AAEA,UAAUY,cAAV,GAA2B;AACzB,QAAMtC,UAAU,CAACI,SAAS,CAACmC,mBAAX,EAAgCL,gBAAhC,CAAhB;AACD;;AAED,UAAUM,aAAV,GAA0B;AACxB,QAAMxC,UAAU,CAACI,SAAS,CAACqC,kBAAX,EAA+BN,eAA/B,CAAhB;AACD;;AAED,UAAUO,kBAAV,GAA+B;AAC7B,QAAM1C,UAAU,CAACI,SAAS,CAACuC,kBAAX,EAA+BP,mBAA/B,CAAhB;AACD;;AAED,UAAUQ,SAAV,GAAsB;AACpB,QAAM5C,UAAU,CAACI,SAAS,CAACyC,aAAX,EAA0BR,OAA1B,CAAhB;AACD;;AAED,UAAUS,QAAV,GAAqB;AACnB,QAAM9C,UAAU,CAACI,SAAS,CAAC2C,YAAX,EAAyBlB,MAAzB,CAAhB;AACD;;AAED,UAAUmB,eAAV,GAA4B;AAC1B,QAAMhD,UAAU,CAACI,SAAS,CAAC6C,cAAX,EAA2BtB,aAA3B,CAAhB;AACD;;AAED,UAAUuB,SAAV,GAAsB;AACpB,QAAMjD,GAAG,CAAC,CACRC,IAAI,CAACoC,cAAD,CADI,EAERpC,IAAI,CAACsC,aAAD,CAFI,EAGRtC,IAAI,CAACwC,kBAAD,CAHI,EAIRxC,IAAI,CAAC0C,SAAD,CAJI,EAKR1C,IAAI,CAAC4C,QAAD,CALI,EAMR5C,IAAI,CAAC8C,eAAD,CANI,CAAD,CAAT;AAQD;;AAED,eAAeE,SAAf","sourcesContent":["import { takeLatest, all, call, put } from \"redux-saga/effects\";\r\nimport UserTypes from \"./user-types\";\r\nimport {\r\n  signinSuccess,\r\n  signinFailure,\r\n  signoutSuccess,\r\n  signoutFailure,\r\n  signupSuccess,\r\n  signupFailure,\r\n} from \"./user-actions\";\r\n\r\nimport {\r\n  signInWithPopup,\r\n  googleProvider,\r\n  authInstance,\r\n  getDoc,\r\n  createUserProfileDocument,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  getCurrentUser,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\n///////////////////////////User Authentication////////////////////////////////\r\n\r\nfunction* authenticateUser(userAuth, additionalData) {\r\n  try {\r\n    const userRef = yield call(\r\n      createUserProfileDocument,\r\n      userAuth,\r\n      additionalData\r\n    );\r\n    const userSnapshot = yield getDoc(userRef);\r\n    yield put(\r\n      signinSuccess({\r\n        id: userSnapshot.id,\r\n        ...userSnapshot.data(),\r\n      })\r\n    );\r\n  } catch (error) {\r\n    yield put(signinFailure(error));\r\n  }\r\n}\r\n\r\n///////////////////////////SignUp Code////////////////////////////////\r\n\r\nfunction* signUpSuccess({ payload: { userAuth, additionalData } }) {\r\n  yield authenticateUser(userAuth, additionalData);\r\n}\r\n\r\nfunction* signUp({ payload: { email, password, displayName } }) {\r\n  try {\r\n    const { user } = yield createUserWithEmailAndPassword(\r\n      authInstance,\r\n      email,\r\n      password\r\n    );\r\n    yield put(\r\n      signupSuccess({ userAuth: user, additionalData: { displayName } })\r\n    );\r\n  } catch (error) {\r\n    yield put(signupFailure(error));\r\n  }\r\n}\r\n\r\n///////////////////////////SignIn and SignOut Code//////////////////////////////\r\n\r\nfunction* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield signInWithPopup(authInstance, googleProvider);\r\n    yield authenticateUser(user);\r\n  } catch (error) {\r\n    yield put(signinFailure(error));\r\n  }\r\n}\r\n\r\nfunction* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield signInWithEmailAndPassword(\r\n      authInstance,\r\n      email,\r\n      password\r\n    );\r\n    yield authenticateUser(user);\r\n  } catch (error) {\r\n    yield put(signinFailure(error));\r\n  }\r\n}\r\n\r\nfunction* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield authenticateUser(userAuth);\r\n  } catch (error) {\r\n    yield put(signinFailure(error));\r\n  }\r\n}\r\n\r\nfunction* signOut() {\r\n  try {\r\n    yield authInstance.signOut();\r\n    yield put(signoutSuccess());\r\n  } catch (error) {\r\n    yield put(signoutFailure(error));\r\n  }\r\n}\r\n\r\n///////////////////////////Sagas/////////////////////////////////////////\r\n\r\nfunction* onGoogleSignIn() {\r\n  yield takeLatest(UserTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\r\n}\r\n\r\nfunction* onEmailSignIn() {\r\n  yield takeLatest(UserTypes.EMAIL_SIGNIN_START, signInWithEmail);\r\n}\r\n\r\nfunction* onCheckUserSession() {\r\n  yield takeLatest(UserTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nfunction* onSignOut() {\r\n  yield takeLatest(UserTypes.SIGNOUT_START, signOut);\r\n}\r\n\r\nfunction* onSignUp() {\r\n  yield takeLatest(UserTypes.SIGNUP_START, signUp);\r\n}\r\n\r\nfunction* onSignUpSuccess() {\r\n  yield takeLatest(UserTypes.SIGNUP_SUCCESS, signUpSuccess);\r\n}\r\n\r\nfunction* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignIn),\r\n    call(onEmailSignIn),\r\n    call(onCheckUserSession),\r\n    call(onSignOut),\r\n    call(onSignUp),\r\n    call(onSignUpSuccess),\r\n  ]);\r\n}\r\n\r\nexport default userSagas;\r\n"]},"metadata":{},"sourceType":"module"}